func New() (*Input, error) {
	portaudio.Initialize()
	buffer := make([]float32, 44100*2)
	stream, err := portaudio.OpenDefaultStream(1, 0, 44100, len(buffer), func(in []float32) {
		copy(buffer, in)
	})
	if err != nil {
		return nil, err
	}
	if err := stream.Start(); err != nil {
		stream.Close()
		return nil, err
	}
	sound_chan := make(chan []float32)
	close_signal := make(chan struct{})

	go func() {
		for {
			select {
			case <-close_signal:
				log.Println("Audio chan closed")
				return
			case sound_chan <- buffer:
			}
		}
	}()
	// return

	return &Input{
		stream:            stream,
		in_stream_channel: sound_chan,
		close_signal:      close_signal,
	}, nil
}